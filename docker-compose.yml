services:
  mongo:
    container_name: powerguard-db
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:${PORT_DB}/test --quiet
      interval: 5s
      timeout: 10s
      retries: 5
    image: mongo:latest
    restart: always
    ports:
      - ${PORT_DB}:${PORT_DB}
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${USERNAME_DB}
      MONGO_INITDB_ROOT_PASSWORD: ${PASSWORD_DB}
    volumes:
      - mongo-data:/var/lib/mongodb
    networks:
      - powerguard-net

  mongo-express:
    container_name: mongo-express
    depends_on:
      mongo:
        condition: service_healthy
    image: mongo-express:latest
    restart: always
    profiles: [ "dev" ]
    ports:
      - "80:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${USERNAME_DB}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${PASSWORD_DB}
      ME_CONFIG_MONGODB_URL: mongodb://${USERNAME_DB}:${PASSWORD_DB}@mongo:${PORT_DB}/
      ME_CONFIG_BASICAUTH: false
    networks:
      - powerguard-net

  redis:
    container_name: powerguard-cache
    healthcheck:
      test: [ "CMD", "redis-cli", "PING" ]
      interval: 5s
      timeout: 10s
      retries: 5
    image: redis:latest
    restart: always
    volumes:
      - redis-data:/data
    ports:
      - ${PORT_CACHE}:${PORT_CACHE}
    networks:
      - powerguard-net

  api:
    depends_on:
      mongo:
        condition: service_healthy
      redis:
        condition: service_healthy
    container_name: powerguard-api
    image: joaopalazzolli/powerguard
    build:
      context: .
      dockerfile: Dockerfile
    profiles: [ "prod" ]
    environment:
      - PORT=${PORT_API}
      - CACHE_KEY_A=${CACHE_KEY_A}
      - CACHE_KEY_C=${CACHE_KEY_C}
      - CACHE_KEY_L=${CACHE_KEY_L}
      - API_HOST=${API_HOST}
      - API_PORT=${API_PORT}
      - API_SCHEMA=${API_SCHEMA}
      - API_ENDPOINT_BUILDING_A=${API_ENDPOINT_BUILDING_A}
      - API_ENDPOINT_BUILDING_C=${API_ENDPOINT_BUILDING_C}
      - API_ENDPOINT_BUILDING_L=${API_ENDPOINT_BUILDING_L}
      - SECURITY_KEY=${SECURITY_KEY}
      - TOKEN_EXPIRATION_TIME=${TOKEN_EXPIRATION_TIME}
      - USERNAME_A=${USERNAME_A}
      - PASSWORD_A=${PASSWORD_A}
      - USERNAME_C=${USERNAME_C}
      - PASSWORD_C=${PASSWORD_C}
      - USERNAME_L=${USERNAME_L}
      - PASSWORD_L=${PASSWORD_L}
      - DB=${DB}
      - HOST_DB=${HOST_DB}
      - PORT_DB=${PORT_DB}
      - USERNAME_DB=${USERNAME_DB}
      - PASSWORD_DB=${PASSWORD_DB}
      - HOST_CACHE=${HOST_CACHE}
      - PORT_CACHE=${PORT_CACHE}
      - CORS_ORIGIN=${CORS_ORIGIN}
    ports:
      - 3000:${PORT_API}
    volumes:
      - .:/usr/src/powerguard
    networks:
      - powerguard-net

volumes:
  mongo-data:
  redis-data:

networks:
  powerguard-net:
    driver: bridge